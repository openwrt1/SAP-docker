# .github/workflows/docker-publish.yml
name: Docker Image CI

# 1. 配置触发器：在推送到 main 分支时运行此工作流
on:
  push:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # 2. 授予工作流写入 GitHub Packages 的权限
    permissions:
      contents: read
      packages: write

    steps:
      # 3. 检出你的代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 4. 登录到 GitHub Container Registry (GHCR)
      # 使用 GITHUB_TOKEN 可以安全地进行身份验证，无需手动创建密钥
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. 从 Git 元数据中提取标签和标签
      # 这会自动为你生成合适的 Docker 镜像标签，例如 `latest`, `v1.0.0` 等
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      # 6. 构建 Docker 镜像并推送到 GHCR
      # 这个步骤会使用你项目中的 Dockerfile 文件
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # 添加这个 LABEL 来告诉 Cloud Foundry 使用 process 健康检查
          labels: |
            org.cloudfoundry.health-check.type=process
            ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
